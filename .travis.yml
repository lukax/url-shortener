sudo: required
services:
  - docker

env:
  global:
    - IMAGE_NAME=espdlucas/jeitin
    - REGISTRY_USER=espdlucas
    # - REGISTRY_PASS=...
    # - DOCKER_HOST=75.101.224.76
    # - DOCKER_HOST_USR=lucas

addons:
  ssh_known_hosts:
    - 75.101.224.76

before_script:
  - mkdir -p ~/bin && curl -sSL -o ~/bin/jq https://github.com/stedolan/jq/releases/download/jq-1.5/jq-linux64 && chmod +x ~/bin/jq
  - export PATH=$PATH:~/bin
  - jq --version
  - version="$(jq -r '.version' ./package.json)"
  - docker pull "$IMAGE_NAME" || true
script:
  - docker build --pull --cache-from "$IMAGE_NAME" --tag "$IMAGE_NAME" -f ./.docker/prod/Dockerfile .
  #- docker tag

after_script:
  - docker images

before_deploy:
  - docker login -u "$REGISTRY_USER" -p "$REGISTRY_PASS"
  - docker tag "$IMAGE_NAME" "${IMAGE_NAME}:latest"
  - docker tag "$IMAGE_NAME" "${IMAGE_NAME}:${version}"

deploy:
  provider: script
  script: docker push "${IMAGE_NAME}:latest" && docker push "${IMAGE_NAME}:${version}"
  on:
    branch: develop

after_deploy:
  - echo "$VM_SSH_KEY" | base64 -d > lucas.pem
  - chmod 400 lucas.pem
  - ssh-keyscan 75.101.224.76 >> ~/.ssh/known_hosts
  - |
    ssh -i lucas.pem lucas@75.101.224.76 'ssh -i lucas.pem lucas@172.25.10.168 /bin/bash' << EOF
    sudo docker login -u "$REGISTRY_USER" -p "$REGISTRY_PASS";
    sudo docker kill \$(sudo docker ps -q);
    sudo docker rm \$(sudo docker ps -qa --no-trunc --filter "status=exited");
    sudo docker rmi \$(sudo docker images -a -q) -f;
    sudo docker pull "${IMAGE_NAME}:${version}";
    sudo docker run -d -p "80:${PORT}" -e "PORT=${PORT}" -e "DB_NAME=${DB_NAME}" -e "DB_USERNAME=${DB_USERNAME}" -e "DB_PASSWORD=${DB_PASSWORD}" -e "DB_PORT=${DB_PORT}" "${IMAGE_NAME}:${version}";
    EOF
