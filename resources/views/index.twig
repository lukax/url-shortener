{% extends 'layout.twig' %}


{% block styles %}
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link href="https://fonts.googleapis.com/css?family=Signika:400,700" rel="stylesheet">
    <link rel="stylesheet" type="text/css" href="/css/styles.css">
    <style>
            html {
                display: flex;
                height: 100%;
            }
            body {
                margin: auto;
                width: 100%;
                padding: 0 .5em;
            }
            body, * {
                font-family: Signika, sans-serif;
                font-weight: 400;
                color: rgb(0, 0, 0);
                text-align: center;
            }
            body, button, input {
                font-size: 30px;
            }
            h1 {
                font-weight: 700;
                font-size: 60px;
                margin: 0 0 .25em;
            }
            * {
                box-sizing: border-box;
            }
            input{
                display: inline-block;
                width: 90%;
                max-width: 600px;
                padding: .45em;
                margin: .5em;
                border: 0;
                border-radius: 0;
                background-color: rgb(241, 232, 232);
            }
            input:focus{
                outline: 3px solid rgb(0, 0, 0);
            }
            button {
                border-radius: 0;
                border: 0;
                padding: .45em 1em;
                margin: .5em;
                width: 90%;
                max-width: 15ex;
                color: rgba(255,255,255,.75);
                background-color: rgb(0, 0, 0);
            }
            button:hover {
                color: rgba(255,255,255,1);
            }
            button:active {
                color: rgba(255,255,255,.55);
                transform: scale(.95);
            }
            footer {
                font-size: 16px;
            }
        </style>
{% endblock %}

{% block body %}
    <h1>{{ title }}</h1>
    <form id="urlform">
        <input type="url" name="url" id="mUrl" required placeholder="enter a url">
        <br/>
        <input type="text" name="title" id="mTitle" required placeholder="give it a cool title">
        <br/>
        <button name="shortit" type="submit">short it!</button>
        <br/>
        <br/>
        <a id="urlhash" style="word-wrap: break-word; white-space: pre;">&nbsp;</a>
    </form>



    <script>
        
        var urlform = document.getElementById("urlform");
        urlform.addEventListener("submit", function(e){
            e.preventDefault(); 
            var headers = new Headers();
            headers.set('Content-Type', 'application/json');

            var a = document.getElementById("urlhash");
            a.removeAttribute("href");
            a.innerText = "...";
            a.style.color = "black";

            fetch("/api/urls", {
                method: "POST",
                body: JSON.stringify({
                    url: document.getElementById('mUrl').value,
                    title: document.getElementById('mTitle').value
                }),
                headers: headers
            }).then(res => {

                if(res.status == 200){
                    res.json().then((json) => {
                        a.setAttribute("href", json);
                        a.innerText = window.location.href + json;
                    });
                }
                else {
                    a.removeAttribute("href");
                    a.innerText = "invalid url :(";
                    a.style.color = "red";
                }
            }).catch(err => {
                a.removeAttribute("href");
                a.innerText = "connection error, please try again";
                a.style.color = "red";
            });
        });

        var protocol = 'http://';
        urlform.url.onpaste = function(e){
          const text = e.clipboardData.getData('text');
          if (/https?:\/\//.test(text)) {
            e.preventDefault();
            urlform.url.value = text;
          }
        }
        urlform.url.onfocus = function(){
          if (urlform.url.value.trim() == '') {
            urlform.url.value = protocol;
          }
        }
        urlform.url.onblur = function(){
          if (urlform.url.value.trim() == protocol) {
            urlform.url.value = '';
          }
        }
        
    </script>

{% endblock %}

